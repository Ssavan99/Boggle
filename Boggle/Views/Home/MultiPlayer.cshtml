@{
    ViewData["Title"] = "Multiplayer";
}

@{
    Game g = new Game();
    Board b = g.getBoard();
    Die[,] d = b.shakeForNewBoard();
    b.setDice(d);
}
<h2>Multiplayer</h2>

<div class="text-center">
    <h1 class="display-4">Welcome to Boggle</h1>
    <p>Learn how to play <a href="https://www.hasbro.com/common/instruct/boggle.pdf" target="_blank">here!</a> (Opens in new tab)</p>
</div>

<div id="boggle-container">
    <img src="/images/logo.png" class="logo" />
    <div id="board">
        <div class="row">
            <div class="boggle">
                <span>@Html.Label(b.getDie(0, 0).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(0, 1).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(0, 2).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(0, 3).getUpLetter())</span>
            </div>
        </div>
        <div class="row">
            <div class="boggle">
                <span>@Html.Label(b.getDie(1, 0).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(1, 1).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(1, 2).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(1, 3).getUpLetter())</span>
            </div>
        </div>
        <div class="row">
            <div class="boggle">
                <span>@Html.Label(b.getDie(2, 0).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(2, 1).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(2, 2).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(2, 3).getUpLetter())</span>
            </div>
        </div>
        <div class="row">
            <div class="boggle">
                <span>@Html.Label(b.getDie(3, 0).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(3, 1).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(3, 2).getUpLetter())</span>
            </div>
            <div class="boggle">
                <span>@Html.Label(b.getDie(3, 3).getUpLetter())</span>
            </div>
        </div>
    </div>
    <div id="submit-word">
        <form>
            <label for="input-word"><strong>Current Word</strong></label><br>
            <input type='text' id="input-word" name="input-word">
            <input type='submit' value='Submit'>
        </form>
    </div>
    <table id="p1-score-table">
        <tr id=header>
            <td>Player One</td>
        </tr>
        <tr>
            <th>Word </th>
            <th>Score</th>
        </tr>
        <tr>
            <td>string</td>
            <td>int</td>
        </tr>
        <tr>
            <td>string</td>
            <td>int</td>
        </tr>
        <tr id="footer">
            <td>Total </td>
            <td>int</td>
        </tr>
    </table>
    <table id="p2-score-table">
        <tr id=header>
            <td>Player Two</td>
        </tr>
        <tr>
            <th>Word </th>
            <th>Score</th>
        </tr>
        <tr>
            <td>string</td>
            <td>int</td>
        </tr>
        <tr>
            <td>string</td>
            <td>int</td>
        </tr>
        <tr id="footer">
            <td>Total </td>
            <td>int</td>
        </tr>
    </table>
</div>

<style>
    body {
        background-color: yellowgreen;
        font-family: Arial, Helvetica, sans-serif;
    }

    #boggle-container {
        display: flex;
        flex-direction: column;
        width: 490px;
        margin: 0 auto;
    }

    .logo {
        align-self: center;
    }

    #board {
        background-color: #A9A9A9;
        padding: 5px;
        margin-top: 20px;
    }

    .row {
        display: flex;
        text-align: center;
        flex-direction: row;
        padding: 5px;
    }

    .boggle:hover {
        cursor: pointer;
    }

    .boggle {
        width: 80px;
        height: 80px;
        border-radius: 5px;
        background-color: #ffffff;
        flex: 1 1 auto;
        margin: 5px;
    }

        .boggle.selected {
            background-color: #ACCEEC;
        }

        .boggle span {
            font-weight: bold;
            display: block;
            position: relative;
            top: 50%;
            transform: translateY(-50%);
        }

    #submit-word {
        background-color: aqua;
        margin: 15px 0;
        padding: 15px;
        display: flex;
        justify-content: space-between;
    }

    #p1-score-table tr#header td {
        background-color: rgb(248, 96, 129);
    }

    #p1-score-table {
        /* ReSharper disable once InvalidValue */
        align-self: left;
        border: 5px solid #FFCA08;
        border-collapse: collapse;
        text-align: left;
    }

        #p1-score-table td, #p1-score-table th {
            border: 5px solid #FFCA08;
            background-color: white;
            padding: 5px;
        }

        #p1-score-table tr#footer td {
            background-color: #ACCEEC;
        }

    #p2-score-table tr#header td {
        background-color: aquamarine;
    }

    #p2-score-table {
        /* ReSharper disable once InvalidValue */
        align-self: left;
        border: 5px solid #FFCA08;
        border-collapse: collapse;
        text-align: left;
    }

        #p2-score-table td, #p2-score-table th {
            border: 5px solid #FFCA08;
            background-color: white;
            padding: 5px;
        }

        #p2-score-table tr#footer td {
            background-color: #ACCEEC;
        }
</style>